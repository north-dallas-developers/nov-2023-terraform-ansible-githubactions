name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:     
      - name: Git setup
        uses: actions/checkout@v2
      
      - name: Dotnet run
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0'
      
      - name: Publish prod
        run: |
          cd ./dotnet-app
          dotnet restore
          dotnet publish -r linux-x64 --configuration "Release" -o sitebuild --self-contained /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true

      # This step uses this community-contributed action: https://github.com/easingthemes/ssh-deploy
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }} # SSH key generated by the Terraform script
          REMOTE_HOST: ${{ secrets.EC2_DNS_NAME }} # DNS name from the Terraform output
          REMOTE_USER: ubuntu # Standard user for the EC2 instance we are using
          SOURCE: ./dotnet-app/sitebuild/
          TARGET: /opt/apps/nddg-nov-2023-dotnet # This is the name of the folder in which the deployed files will be put
          SCRIPT_AFTER: |
            sudo systemctl restart north-dallas-developers.service 
            

